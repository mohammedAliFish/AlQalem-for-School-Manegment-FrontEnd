// <auto-generated />
using System;
using AlQalem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlQalem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240819165214_removeTabels")]
    partial class removeTabels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlQalem.Models.AcademicYear", b =>
                {
                    b.Property<Guid>("AcademicYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("AcademicYearId");

                    b.ToTable("AcademicYears");

                    b.HasData(
                        new
                        {
                            AcademicYearId = new Guid("b67586db-be7b-435c-a8c4-355b7a8f3cb8"),
                            Year = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("a9f6fba1-da67-4f1b-b4b4-05241e21553c"),
                            Year = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("3a73a6a9-3ec0-4e6a-acbe-e83e73550d58"),
                            Year = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("9c7b9021-dba2-4114-bfaa-9867fbf6a146"),
                            Year = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("d92a74af-3b36-4c72-a62b-b43652e142e0"),
                            Year = new DateTime(2027, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("822a767a-1494-4bb1-8929-277a7c2458e6"),
                            Year = new DateTime(2028, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("3eab258c-21ce-4f98-ae59-0ca794d15d22"),
                            Year = new DateTime(2029, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("cc297061-e8c6-4320-a7cf-983c8994c527"),
                            Year = new DateTime(2030, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AlQalem.Models.Attachment", b =>
                {
                    b.Property<Guid>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("AttachmentId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("AlQalem.Models.Class", b =>
                {
                    b.Property<Guid>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GradeLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassId");

                    b.HasIndex("GradeLevelId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("AlQalem.Models.ClassSubjectTeacher", b =>
                {
                    b.Property<Guid>("ClassSubjectTeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassSubjectTeacherId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassSubjectTeachers");
                });

            modelBuilder.Entity("AlQalem.Models.ClassTeacher", b =>
                {
                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassTeachers");
                });

            modelBuilder.Entity("AlQalem.Models.GradeLevels", b =>
                {
                    b.Property<Guid>("GradeLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeLevelId");

                    b.ToTable("GradeLevels");

                    b.HasData(
                        new
                        {
                            GradeLevelId = new Guid("3ef92bda-33a2-43b7-bad7-5fa684494504"),
                            Name = "الاول متوسط"
                        },
                        new
                        {
                            GradeLevelId = new Guid("0b92c6cb-28ab-4492-bf40-613d7ebbab73"),
                            Name = "الثاني متوسط"
                        },
                        new
                        {
                            GradeLevelId = new Guid("465b9ed6-93c8-4dd6-bf4c-e0af4708df69"),
                            Name = "الثالث متوسط "
                        });
                });

            modelBuilder.Entity("AlQalem.Models.School", b =>
                {
                    b.Property<Guid>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("SchoolId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("AlQalem.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("StatusId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AlQalem.Models.StudentAttachment", b =>
                {
                    b.Property<Guid>("StudentAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsProfilePicture")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentAttachmentId");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentAttachments");
                });

            modelBuilder.Entity("AlQalem.Models.StudentStatus", b =>
                {
                    b.Property<Guid>("StudentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentStatusId");

                    b.ToTable("StudentStatuses");

                    b.HasData(
                        new
                        {
                            StudentStatusId = new Guid("4a7eedf2-4949-467c-9c33-b25f788e9292"),
                            IsDeleted = false,
                            Name = "Ongoing"
                        },
                        new
                        {
                            StudentStatusId = new Guid("3c4e2082-85dd-4755-be45-5b965ca7ffec"),
                            IsDeleted = false,
                            Name = "Transferred"
                        },
                        new
                        {
                            StudentStatusId = new Guid("86ede45f-052c-48f6-9787-c8b9ae4eb971"),
                            IsDeleted = false,
                            Name = "Expelled"
                        },
                        new
                        {
                            StudentStatusId = new Guid("52102e44-b40e-4aee-be65-69889dc8bdf9"),
                            IsDeleted = false,
                            Name = "Interrupted"
                        });
                });

            modelBuilder.Entity("AlQalem.Models.Subject", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("AlQalem.Models.Teacher", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("AlQalem.Models.TeacherSubject", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("Grade", b =>
                {
                    b.Property<Guid>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GradeLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GradeType")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GradeId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("GradeLevelId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("AlQalem.Models.Class", b =>
                {
                    b.HasOne("AlQalem.Models.GradeLevels", "GradeLevel")
                        .WithMany("Classes")
                        .HasForeignKey("GradeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.School", "School")
                        .WithMany("Classes")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GradeLevel");

                    b.Navigation("School");
                });

            modelBuilder.Entity("AlQalem.Models.ClassSubjectTeacher", b =>
                {
                    b.HasOne("AlQalem.Models.Class", "Class")
                        .WithMany("ClassSubjectTeachers")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Subject", "Subject")
                        .WithMany("ClassSubjectTeachers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Teacher", "Teacher")
                        .WithMany("ClassSubjectTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AlQalem.Models.ClassTeacher", b =>
                {
                    b.HasOne("AlQalem.Models.Class", "Class")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Teacher", "Teacher")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AlQalem.Models.Student", b =>
                {
                    b.HasOne("AlQalem.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.StudentStatus", "Status")
                        .WithMany("Students")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AlQalem.Models.StudentAttachment", b =>
                {
                    b.HasOne("AlQalem.Models.Attachment", "Attachment")
                        .WithMany("StudentAttachments")
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Student", "Student")
                        .WithMany("StudentAttachments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AlQalem.Models.TeacherSubject", b =>
                {
                    b.HasOne("AlQalem.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Grade", b =>
                {
                    b.HasOne("AlQalem.Models.AcademicYear", "AcademicYear")
                        .WithMany("Grades")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.GradeLevels", "GradeLevel")
                        .WithMany("Grades")
                        .HasForeignKey("GradeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("GradeLevel");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AlQalem.Models.AcademicYear", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("AlQalem.Models.Attachment", b =>
                {
                    b.Navigation("StudentAttachments");
                });

            modelBuilder.Entity("AlQalem.Models.Class", b =>
                {
                    b.Navigation("ClassSubjectTeachers");

                    b.Navigation("ClassTeachers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AlQalem.Models.GradeLevels", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("AlQalem.Models.School", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("AlQalem.Models.Student", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("StudentAttachments");
                });

            modelBuilder.Entity("AlQalem.Models.StudentStatus", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("AlQalem.Models.Subject", b =>
                {
                    b.Navigation("ClassSubjectTeachers");

                    b.Navigation("Grades");

                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("AlQalem.Models.Teacher", b =>
                {
                    b.Navigation("ClassSubjectTeachers");

                    b.Navigation("ClassTeachers");

                    b.Navigation("TeacherSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
