// <auto-generated />
using System;
using AlQalem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlQalem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240817201144_AddGradeTypeToGrade1")]
    partial class AddGradeTypeToGrade1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlQalem.Models.AcademicYear", b =>
                {
                    b.Property<Guid>("AcademicYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("AcademicYearId");

                    b.ToTable("AcademicYears");

                    b.HasData(
                        new
                        {
                            AcademicYearId = new Guid("c53180e4-97d0-47eb-b987-b25d5de7f6f0"),
                            Year = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("e527cd83-0e18-4e80-a426-1e482383ee1c"),
                            Year = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("683c78bf-221d-4351-89b2-149553b5067d"),
                            Year = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("053dd4fb-89aa-435c-9145-7cd7c64dda86"),
                            Year = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("93eb11e9-959e-41bd-9577-978d72b37a05"),
                            Year = new DateTime(2027, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("b77a3f93-5d03-4604-9e38-25df850e279c"),
                            Year = new DateTime(2028, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("531891c0-c252-457d-9e52-b3814dd958bc"),
                            Year = new DateTime(2029, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = new Guid("7456aafd-363a-477d-b653-31ce9cc7c99c"),
                            Year = new DateTime(2030, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AlQalem.Models.Attachment", b =>
                {
                    b.Property<Guid>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("AttachmentId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("AlQalem.Models.Class", b =>
                {
                    b.Property<Guid>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GradeLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SchoolId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassId");

                    b.HasIndex("GradeLevelId");

                    b.HasIndex("SchoolId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("AlQalem.Models.ClassSubjectTeacher", b =>
                {
                    b.Property<Guid>("ClassSubjectTeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassSubjectTeacherId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassSubjectTeachers");
                });

            modelBuilder.Entity("AlQalem.Models.ClassTeacher", b =>
                {
                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassId", "TeacherId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassTeachers");
                });

            modelBuilder.Entity("AlQalem.Models.GradeLevels", b =>
                {
                    b.Property<Guid>("GradeLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradeLevelId");

                    b.ToTable("GradeLevels");

                    b.HasData(
                        new
                        {
                            GradeLevelId = new Guid("d877be1f-3c41-4441-9c4e-34d3df6c146b"),
                            Name = "الاول متوسط"
                        },
                        new
                        {
                            GradeLevelId = new Guid("ecb0bcce-4a80-4669-8be3-b11cd3abe516"),
                            Name = "الثاني متوسط"
                        },
                        new
                        {
                            GradeLevelId = new Guid("8d192da8-9799-4916-8b24-497444a647db"),
                            Name = "الثالث متوسط "
                        });
                });

            modelBuilder.Entity("AlQalem.Models.Permission", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionNumber")
                        .HasColumnType("int");

                    b.HasKey("PermissionId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("a7f5d1f8-6b57-4d5e-8ed1-76e2d6e9f0c3"),
                            Name = "View",
                            PermissionNumber = 0
                        },
                        new
                        {
                            PermissionId = new Guid("b7f5d1f8-6b57-4d5e-8ed1-76e2d6e9f0c3"),
                            Name = "Create",
                            PermissionNumber = 0
                        },
                        new
                        {
                            PermissionId = new Guid("c7f5d1f8-6b57-4d5e-8ed1-76e2d6e9f0c3"),
                            Name = "Edit",
                            PermissionNumber = 0
                        },
                        new
                        {
                            PermissionId = new Guid("d7f5d1f8-6b57-4d5e-8ed1-76e2d6e9f0c3"),
                            Name = "Delete",
                            PermissionNumber = 0
                        });
                });

            modelBuilder.Entity("AlQalem.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("d68e9703-6722-4cf2-9d73-b5e2f1c064d8"),
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = new Guid("0862688c-9742-4d70-9d85-f2197f48c8a6"),
                            Name = "Teacher"
                        },
                        new
                        {
                            RoleId = new Guid("66cd92a5-61f3-488f-bfb2-cb994191eb7c"),
                            Name = "Student"
                        },
                        new
                        {
                            RoleId = new Guid("b7f5d1f8-6b57-4d5e-8ed1-76e2d6e9f0c3"),
                            Name = "Admin"
                        },
                        new
                        {
                            RoleId = new Guid("c7f5d1f8-6b57-4d5e-8ed1-76e2d6e9f0c3"),
                            Name = "Teacher"
                        },
                        new
                        {
                            RoleId = new Guid("d7f5d1f8-6b57-4d5e-8ed1-76e2d6e9f0c3"),
                            Name = "Student"
                        });
                });

            modelBuilder.Entity("AlQalem.Models.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("AlQalem.Models.School", b =>
                {
                    b.Property<Guid>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LogoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.HasKey("SchoolId");

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("AlQalem.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("StatusId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AlQalem.Models.StudentAttachment", b =>
                {
                    b.Property<Guid>("StudentAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttachmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsProfilePicture")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentAttachmentId");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentAttachments");
                });

            modelBuilder.Entity("AlQalem.Models.StudentStatus", b =>
                {
                    b.Property<Guid>("StudentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentStatusId");

                    b.ToTable("StudentStatuses");

                    b.HasData(
                        new
                        {
                            StudentStatusId = new Guid("be17c64f-930c-4d1d-b92c-7d3e764309b3"),
                            IsDeleted = false,
                            Name = "Ongoing"
                        },
                        new
                        {
                            StudentStatusId = new Guid("b0592458-6abe-4542-873e-dfd4be400581"),
                            IsDeleted = false,
                            Name = "Transferred"
                        },
                        new
                        {
                            StudentStatusId = new Guid("b8608202-3970-4010-be45-110e245cee30"),
                            IsDeleted = false,
                            Name = "Expelled"
                        },
                        new
                        {
                            StudentStatusId = new Guid("d094cc93-bdde-475a-bf16-805af13a7840"),
                            IsDeleted = false,
                            Name = "Interrupted"
                        });
                });

            modelBuilder.Entity("AlQalem.Models.Subject", b =>
                {
                    b.Property<Guid>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("AlQalem.Models.Teacher", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeacherId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("AlQalem.Models.TeacherSubject", b =>
                {
                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("AlQalem.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Grade", b =>
                {
                    b.Property<Guid>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicYearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GradeLevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GradeType")
                        .HasColumnType("int");

                    b.Property<decimal>("Score")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GradeId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("GradeLevelId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("AlQalem.Models.Class", b =>
                {
                    b.HasOne("AlQalem.Models.GradeLevels", "GradeLevel")
                        .WithMany("Classes")
                        .HasForeignKey("GradeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.School", "School")
                        .WithMany("Classes")
                        .HasForeignKey("SchoolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GradeLevel");

                    b.Navigation("School");
                });

            modelBuilder.Entity("AlQalem.Models.ClassSubjectTeacher", b =>
                {
                    b.HasOne("AlQalem.Models.Class", "Class")
                        .WithMany("ClassSubjectTeachers")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Subject", "Subject")
                        .WithMany("ClassSubjectTeachers")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Teacher", "Teacher")
                        .WithMany("ClassSubjectTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AlQalem.Models.ClassTeacher", b =>
                {
                    b.HasOne("AlQalem.Models.Class", "Class")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Teacher", "Teacher")
                        .WithMany("ClassTeachers")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AlQalem.Models.RolePermission", b =>
                {
                    b.HasOne("AlQalem.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("AlQalem.Models.Student", b =>
                {
                    b.HasOne("AlQalem.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.StudentStatus", "Status")
                        .WithMany("Students")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("AlQalem.Models.StudentAttachment", b =>
                {
                    b.HasOne("AlQalem.Models.Attachment", "Attachment")
                        .WithMany("StudentAttachments")
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Student", "Student")
                        .WithMany("StudentAttachments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Attachment");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AlQalem.Models.Teacher", b =>
                {
                    b.HasOne("AlQalem.Models.User", "User")
                        .WithOne("Teacher")
                        .HasForeignKey("AlQalem.Models.Teacher", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AlQalem.Models.TeacherSubject", b =>
                {
                    b.HasOne("AlQalem.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AlQalem.Models.User", b =>
                {
                    b.HasOne("AlQalem.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Grade", b =>
                {
                    b.HasOne("AlQalem.Models.AcademicYear", "AcademicYear")
                        .WithMany("Grades")
                        .HasForeignKey("AcademicYearId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.GradeLevels", "GradeLevel")
                        .WithMany("Grades")
                        .HasForeignKey("GradeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("AlQalem.Models.Subject", "Subject")
                        .WithMany("Grades")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AcademicYear");

                    b.Navigation("GradeLevel");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AlQalem.Models.AcademicYear", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("AlQalem.Models.Attachment", b =>
                {
                    b.Navigation("StudentAttachments");
                });

            modelBuilder.Entity("AlQalem.Models.Class", b =>
                {
                    b.Navigation("ClassSubjectTeachers");

                    b.Navigation("ClassTeachers");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AlQalem.Models.GradeLevels", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("AlQalem.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("AlQalem.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("AlQalem.Models.School", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("AlQalem.Models.Student", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("StudentAttachments");
                });

            modelBuilder.Entity("AlQalem.Models.StudentStatus", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("AlQalem.Models.Subject", b =>
                {
                    b.Navigation("ClassSubjectTeachers");

                    b.Navigation("Grades");

                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("AlQalem.Models.Teacher", b =>
                {
                    b.Navigation("ClassSubjectTeachers");

                    b.Navigation("ClassTeachers");

                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("AlQalem.Models.User", b =>
                {
                    b.Navigation("Teacher")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
